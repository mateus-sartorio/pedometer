================ Revision history ============================================
5.0.0:
 - Added basic support for Series 1 Configuration 2 devices (EFR32MG12, etc.)
 - Bugfix: The asynchronous callback of mbedtls_ccm_auth_decrypt and
   mbedtls_cmac_verify_tag reported incorrect error codes when authentication
   verification fails.
 - Bugfix: In asynchronous mode, the output buffer of mbedtls_ccm_auth_decrypt
   was not properly cleared when authentication verification fails.

4.4.0:
 - Added CMAC support with a Silicon Labs specific API (slcl_cmac.c).
   CMAC is not covered by the standard mbedtls interface.
   The CMAC plugin use the CRYPTO hardware module for acceleration.
 - Added CCM plugin (slcl_ccm.c) with CRYPTO hardware acceleration and
   optimized CCM functions for BLE (mbedtls_ccm_encrypt_and_tag_ble and
   mbedtls_ccm_auth_decrypt_ble).
 - Added CRYPTO preemption support in the following plugins:
   slcl_aes.c, slcl_ccm.c, slcl_cmac.c, slcl_ecp.c, slcl_sha1.c and
   slcl_sha256.c.
 - Added support for alternative CRYPTO critical region implementations
   (for the CRYPTO preemption support).
 - Added support for asynchronous (non-blocking) API calls in the following
   plugins: slcl_aes.c, slcl_ccm.c and slcl_cmac.c.
 - Added support for moving data with BUFC and DMA (to/from CRYPTO registers)
   in the following plugins: slcl_aes.c and slcl_ccm.c.
 - In order to support error codes in new SIlicon Labs specific APIs
   extended error code interface of the standard mbedtls by using the full
   32-bit integer range, see details in mbedtls_ecode.h.
 - Added support for AES module on EFM32GG (Giant Gecko) in slcl_aes.c.
   Compile with MBEDTLS_SLCL_PLUGINS in order to enable EFM32GG support.

4.3.1:
 - No changes.

4.3.0:
 - Updated to mbedtls-2.2.0 including EC JPAKE support.
 - sl_aes.c:
   In mbedtls_aes_setkey_enc and mbedtls_aes_setkey_dec change return value to
   MBEDTLS_ERR_AES_INVALID_KEY_LENGTH when key length is not 128 or 256 bits.
   In mbedtls_aes_crypt_cfb128 added support for data lengths not dividable
   with 16 (AES block size), by using software (no crypto) implementation.
   In mbedtls_aes_crypt_cfb8 return errors from mbedtls_aes_crypt_ecb.
 - library/bignum.c:
   In mbedtls_mpi_sub_abs and mbedtls_mpi_mul_mpi copy to and use local
   variables only if necessary.
 - library/ecp.c:
   In ecp_modp call halResetWatchdog #ifdef MBEDTLS_HAVE_HAL_WATCHDOG_TIMER
   for Thread stack integration.
 - library/aes.c:
   In mbedtls_aes_self_test allow failure when setting 192 bit keys which is
   not supported by CRYPTO.
 - library/gcm.c:
   In mbedtls_gcm_self_test allow failure when setting 192 bit keys which is
   not supported by CRYPTO.
 - library/x509.c and x509_crt.c:
   Excluded code when MBEDTLS_FS_IO is defined which is not supported on
   Silicon Labs devices.
 - Added sl_timing.c and timing_alt.h in order to compiler modules depending on
   MBEDTLS_TIMING_C. The user should #define MBEDTLS_TIMING_ALT in order to
   compile.

4.2.1:
 - No changes.

4.2.0:
 - First version including support for mbedtls 2.0.0 and CRYPTO acceleration of
   AES (sl_aes.c), ECC (sl_ecp.c), SHA1 (sl_sha1.c) and SHA256 (sl_sha256.c).
